///素数 Prime
///涮素数
int prim[NUM], prim_num;
//$O(n\log{n})$
void pre_prime()
{
	prim_num = 0;
    for(int i = 2; i < NUM; i++)
        if(!prim[i])
        {
        	prim[prim_num++] = i;
            for(int j = i + i; j < NUM; j += i) prim[j] = 1;
        }
}

//$O(n)$
void pre_prime()
{
	prim_num = 0;
    for(int i = 2; i < NUM; i++)
	{
        if(!prim[i]) prim[prim_num++] = i;
        for(int j = 0; j < prim_num && i * prim[j] < NUM; j++)
		{
			flag[i * prim[j]] = 1;
			if(i % prim[j] == 0) break;
		}
	}
}

//区间素数
/*要获得区间[L, U]内的素数, L和U很大, 但U - L不大, 那么, 先线性涮出1到$\sqrt{2147483647} \leq 46341$之间所有的素数, 然后在通过已经涮好的素数涮出给定区间的素数
*/

///素数判定
